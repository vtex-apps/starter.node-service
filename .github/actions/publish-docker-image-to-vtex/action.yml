name: 'Publish Docker image to VTEX repo'
description: 'Publish app Docker images to VTEX repository'
inputs:
  docker-user:
    description: VTEX Docker username
    required: true
  docker-token:
    description: VTEX Docker token
    required: true
  version-visibility:
    description: 'Indicates the version visibility that will be used: development, unpublished, or published'
    required: false
    default: 'development'
  version-increment-type:
    description: 'Indicates the type of change that is being done, accepting: major, minor, patch'
    required: false
    default: 'patch'
  work-dir:
    description: Directory where the Dockerfile is located
    required: true
runs:
  using: "composite"
  steps:

    - name: Set VTEX repository address
      run: echo "REGISTRY=vtexapps.jfrog.io" >> $GITHUB_ENV
      shell: bash

    - name: Get app metadata
      id: app-metadata
      uses: vtex/app-metadata-action@main
      with:
        version-visibility: ${{ inputs.version-visibility }}
        version-increment-type: ${{ inputs.version-increment-type }}

    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1.10.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ inputs.docker-user }}
        password: ${{ inputs.docker-token }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3.4.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.service-image-name }}
        tags: type=semver,pattern={{raw}},value=${{ steps.app-metadata.outputs.next-app-version }}
      env:
        service-image-name: ${{ steps.app-metadata.outputs.service-image-name }}
        app-version: ${{ steps.app-metadata.outputs.next-app-version }}

    # Build and push Docker image with Buildx
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@v2.6.1
      with:
        context: ${{ inputs.work-dir }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
