# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Backend Service Publishing (CD)

on:
  workflow_call:

env:
  APP_VERSION_INCREMENT_TYPE: patch

jobs:
  test:
    name: lint, test, and build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get app metadata
        id: app-metadata
        uses: vtex/app-metadata-action@main
      - name: Export env.WORK_DIR as the service path
        run: echo "WORK_DIR=${{ steps.app-metadata.outputs.service-folder }}" >> $GITHUB_ENV
      - run: yarn
        working-directory: ${{ env.WORK_DIR }}
      - run: yarn run lint
        working-directory: ${{ env.WORK_DIR }}
      - run: yarn run test
        working-directory: ${{ env.WORK_DIR }}
        env:
          VTEX_APP_ID: ${{ steps.app-metadata.outputs.app-id }}
      - run: yarn run build
        working-directory: ${{ env.WORK_DIR }}

  publish-docker-image:

    runs-on: ubuntu-latest

    needs: test
    if: ${{ success() }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # This will checkout the PR branch instead of refs/pull/:pr_id/merge
          # It is necessary to avoid a detached HEAD when trying to push updates to the branch
          ref: ${{ github.event.pull_request.head.ref }}

      - name: set-version-visibility-to-unpublished
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        run: echo "APP_VERSION_VISIBILITY=unpublished" >> $GITHUB_ENV

      - name: set-version-visibility-to-development
        if: ${{ !(github.event_name == 'push' && github.ref_name == 'main') }}
        run: echo "APP_VERSION_VISIBILITY=development" >> $GITHUB_ENV

      - name: Publish app services to VTEX Docker repository
        id: publish-docker-images
        uses: ./.github/actions/publish-docker-image-to-vtex
        with:
          docker-user: ${{ secrets.DOCKER_USER }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          version-visibility: ${{ env.APP_VERSION_VISIBILITY }}
          version-increment-type: ${{ env.APP_VERSION_INCREMENT_TYPE }}
